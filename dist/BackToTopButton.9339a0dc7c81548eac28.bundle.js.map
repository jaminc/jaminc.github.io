{"version":3,"sources":["webpack:///./src/templates/partials/backToTopButton/backToTopButton.hbs","webpack:///./src/js/backToTopButton/BackToTopButton.js"],"names":["Handlebars","module","exports","template","container","depth0","helpers","partials","data","resetFocus","document","activeElement","blur","templateToHTML","templateString","tempDiv","createElement","innerHTML","firstElementChild","BackToTopButton","options","Object","assign","this","offsetToAppear","button","body","appendChild","updateButtonVisibility","window","addEventListener","duration","requestAnimationFrame","scrollTo","cosParameter","pageYOffset","scrollCount","oldTimestamp","performance","now","step","newTimestamp","Math","PI","round","cos","scrollToTop","model","subscribeToSidebarOpenState","onChangeSideBarOpenState","bind","setButtonVisibility","show","classList","add","remove","isOpen","setTimeout"],"mappings":"6EAAA,IAAIA,EAAa,EAAQ,KAEzBC,EAAOC,SAAWF,EAAoB,SAAKA,GAAYG,SAAS,CAAC,SAAW,CAAC,EAAE,YAAY,KAAO,SAASC,EAAUC,EAAOC,EAAQC,EAASC,GACzI,MAAO,uJACT,SAAU,K,uYCDZ,SAASC,IACPC,SAASC,cAAcC,OA6BzB,SAASC,EAAeC,GACtB,IAAMC,EAAUL,SAASM,cAAc,OAEvC,OADAD,EAAQE,UAAYH,EACbC,EAAQG,kBAGjB,IAEqBC,E,WACnB,aAA0B,IAAdC,EAAc,uDAAJ,GAAI,UACxBC,OAAOC,OAAOC,KAAMH,GACpBG,KAAKC,eAAiBJ,EAAQI,gBALT,IAMrBD,KAAKE,OAASZ,EAAeV,O,uDAGvB,WACNO,SAASgB,KAAKC,YAAYJ,KAAKE,QAE/BF,KAAKK,yBAELC,OAAOC,iBAAiB,UAAU,kBAAM,EAAKF,4BAC7CL,KAAKE,OAAOK,iBAAiB,SAAS,kBA/C1C,WAAqC,IAAhBC,EAAgB,uDAAL,IAC9B,IAAKF,OAAOG,sBAGV,OAFAH,OAAOI,SAAS,EAAG,QACnBxB,IAIF,IAAMyB,EAAeL,OAAOM,YAAc,EACtCC,EAAc,EACdC,EAAeC,YAAYC,MAE/B,SAASC,EAAKC,IACZL,GAAeM,KAAKC,IAAMZ,GAAYU,EAAeJ,MAClCK,KAAKC,IAAId,OAAOI,SAAS,EAAG,GACpB,IAAvBJ,OAAOM,aAIXN,OAAOI,SAAS,EAAGS,KAAKE,MAAMV,EAAgBA,EAAeQ,KAAKG,IAAIT,KACtEC,EAAeI,EACfZ,OAAOG,sBAAsBQ,IAL3B/B,IAQJoB,OAAOG,sBAAsBQ,GAwBiBM,MAC5CvB,KAAKwB,MAAMC,4BAA4BzB,KAAK0B,yBAAyBC,KAAK3B,S,+CAI1EA,KAAK4B,oBAAoBtB,OAAOM,YAAcZ,KAAKC,kB,0CAGjC4B,GACdA,EACF7B,KAAKE,OAAO4B,UAAUC,IAAI,QAE1B/B,KAAKE,OAAO4B,UAAUE,OAAO,U,+CAIRC,GAAQ,WAC3BA,EACF3B,OAAO4B,YAAW,kBAAM,EAAKN,qBAAqBK,MAElDjC,KAAKK,8B","file":"BackToTopButton.9339a0dc7c81548eac28.bundle.js","sourcesContent":["var Handlebars = require(\"../../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    return \"<button aria-label=\\\"back to top of page button\\\" href=\\\"#\\\" class=\\\"back-to-top-button\\\">\\n    <div class=\\\"back-to-top-button-arrow\\\"></div>\\n</button>\\n\";\n},\"useData\":true});","import template from '../../templates/partials/backToTopButton/backToTopButton.hbs';\nimport '../../scss/backToTopButton/BackToTopButton.scss';\n\nfunction resetFocus() {\n  document.activeElement.blur();\n}\n\nfunction scrollToTop(duration = 400) {\n  if (!window.requestAnimationFrame) {\n    window.scrollTo(0, 0);\n    resetFocus();\n    return;\n  }\n\n  const cosParameter = window.pageYOffset / 2;\n  let scrollCount = 0;\n  let oldTimestamp = performance.now();\n\n  function step(newTimestamp) {\n    scrollCount += Math.PI / (duration / (newTimestamp - oldTimestamp));\n    if (scrollCount >= Math.PI) window.scrollTo(0, 0);\n    if (window.pageYOffset === 0) {\n      resetFocus();\n      return;\n    }\n    window.scrollTo(0, Math.round(cosParameter + (cosParameter * Math.cos(scrollCount))));\n    oldTimestamp = newTimestamp;\n    window.requestAnimationFrame(step);\n  }\n\n  window.requestAnimationFrame(step);\n}\n\nfunction templateToHTML(templateString) {\n  const tempDiv = document.createElement('div');\n  tempDiv.innerHTML = templateString;\n  return tempDiv.firstElementChild;\n}\n\nconst OFFSET_TO_APPEAR = 300;\n\nexport default class BackToTopButton {\n  constructor(options = {}) {\n    Object.assign(this, options);\n    this.offsetToAppear = options.offsetToAppear || OFFSET_TO_APPEAR;\n    this.button = templateToHTML(template());\n  }\n\n  start() {\n    document.body.appendChild(this.button);\n\n    this.updateButtonVisibility();\n\n    window.addEventListener('scroll', () => this.updateButtonVisibility());\n    this.button.addEventListener('click', () => scrollToTop());\n    this.model.subscribeToSidebarOpenState(this.onChangeSideBarOpenState.bind(this));\n  }\n\n  updateButtonVisibility() {\n    this.setButtonVisibility(window.pageYOffset > this.offsetToAppear);\n  }\n\n  setButtonVisibility(show) {\n    if (show) {\n      this.button.classList.add('show');\n    } else {\n      this.button.classList.remove('show');\n    }\n  }\n\n  onChangeSideBarOpenState(isOpen) {\n    if (isOpen) {\n      window.setTimeout(() => this.setButtonVisibility(!isOpen));\n    } else {\n      this.updateButtonVisibility();\n    }\n  }\n}\n"],"sourceRoot":""}